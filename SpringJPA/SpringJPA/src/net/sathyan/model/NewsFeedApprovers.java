/*
 * Created on 2020-09-14 ( Time 15:38:53 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
// This Bean has a basic Primary Key (not composite)

package net.sathyan.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "NEWS_FEED_APPROVERS"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="NEWS_FEED_APPROVERS", schema="PROD" )
// Define named queries here
public class NewsFeedApprovers
    implements Serializable, Cloneable
{

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="NEWS_FEED_APPROVER_ID", nullable=false)
    @SequenceGenerator( name = "NewsFeedApproverssSeq", schema="PROD", sequenceName = "NEWS_FEED_APPROVERS_SEQ", allocationSize = 1, initialValue = 1 )
    @GeneratedValue( strategy = GenerationType.SEQUENCE, generator = "NewsFeedApproverssSeq" )
    private Long newsFeedApproverId ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS
    //----------------------------------------------------------------------
    @Column(name="APPROVER_USER_ID")
    private Long approverUserId ;

    @Column(name="NEWS_FEED_TYPE", length=1)
    private String     newsFeedType ;
    
    @Column(name="CREATED_USER_ID", nullable=false)
    private Long       createdUserId ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false)
    private Date       createdDate  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public NewsFeedApprovers() {
        super();
    }

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setNewsFeedApproverId( Long newsFeedApproverId ) {
        this.newsFeedApproverId = newsFeedApproverId ;
    }
    public Long getNewsFeedApproverId() {
        return this.newsFeedApproverId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : APPROVER_USER_ID ( NUMBER )
    public void setApproverUserId( Long approverUserId ) {
        this.approverUserId = approverUserId;
    }
    public Long getApproverUserId() {
        return this.approverUserId;
    }

    //--- DATABASE MAPPING : NEWS_FEED_TYPE ( CHAR )
    public void setNewsFeedType( String newsFeedType ) {
        this.newsFeedType = newsFeedType;
    }
    public String getNewsFeedType() {
        return this.newsFeedType;
    }

  //--- DATABASE MAPPING : CREATED_USER_ID ( NUMBER )
    public void setCreatedUserId( Long createdUserId ) {
        this.createdUserId = createdUserId;
    }
    public Long getCreatedUserId() {
        return this.createdUserId;
    }

    //--- DATABASE MAPPING : CREATED_DATE ( DATE )
    public void setCreatedDate( Date createdDate ) {
        this.createdDate = createdDate;
    }
    public Date getCreatedDate() {
        return this.createdDate;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(newsFeedApproverId);
        sb.append("]:"); 
        sb.append(approverUserId);
        sb.append("|");
        sb.append(newsFeedType);
        return sb.toString(); 
    } 

//    @ManyToOne(fetch = FetchType.LAZY, optional = false)
//    @JoinColumn(name = "news_feed_id", nullable = false)
//    private NewsFeeds newsFeeds;
    

    //----------------------------------------------------------------------
    // clone METHOD
    //----------------------------------------------------------------------
    public NewsFeedApprovers clone()
        throws CloneNotSupportedException
    {
        NewsFeedApprovers clone = (NewsFeedApprovers)super.clone();

        return clone;
    }
}
